{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAIP,IAAIQ,EAAa,EACbC,EAAY,EACZC,EAAiB,EAyBrB,SAASC,EAAWC,G,IAAEb,EAAFa,EAAEb,SAAUC,EAAZY,EAAYZ,MAC9BJ,EAAAiB,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,OAI/D,SAASgB,EAAUJ,G,IAAEb,EAAFa,EAAEb,SAAUC,EAAZY,EAAYZ,MAC7BJ,EAAAiB,OAAOI,QAAQ,sBAAuCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,OA7B/CkB,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYzB,EAAKuB,EAALvB,MAAO0B,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAE3BnB,EAAaoB,OAAO5B,EAAM6B,OAC1BpB,EAAYmB,OAAOF,EAAKG,OACxBnB,EAAiBkB,OAAOD,EAAOE,OAKjC,SAAmBC,EAAYC,EAAWC,GACxC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAgBC,GAAK,EACvCnC,EAAcmC,EAAI,EAAGH,EAAaC,EAAYE,GAC3CC,KAAKvB,GACLwB,MAAMnB,GARXoB,CAAU5B,EAAYC,EAAWC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nlet firstDelay = 0;\nlet stepDelay = 0;\nlet amountPromises = 0;\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  firstDelay = Number(delay.value);\n  stepDelay = Number(step.value);\n  amountPromises = Number(amount.value);\n  getResult(firstDelay, stepDelay, amountPromises);\n  //  console.log(firstDelay, stepDelay, amountPromises);\n}\n\nfunction getResult(firstDelay, stepDelay, amountPromises) {\n  for (let i = 0; i < amountPromises; i += 1) {\n    createPromise(i + 1, firstDelay + stepDelay * i)\n      .then(onSuccsess)\n      .catch(onFailure);\n  }\n}\n\nfunction onSuccsess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onFailure({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  //  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amountPromises","$ce04d3a99e08e73b$var$onSuccsess","param","Notify","success","concat","$ce04d3a99e08e73b$var$onFailure","failure","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","Number","value","firstDelay1","stepDelay1","amountPromises1","i","then","catch","$ce04d3a99e08e73b$var$getResult"],"version":3,"file":"03-promises.50f89b52.js.map"}